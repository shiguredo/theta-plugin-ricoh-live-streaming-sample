// Copyright 2018 Ricoh Company, Ltd. All rights reserved.

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileSdkVersion 28
    defaultConfig {
        applicationId "com.theta360.sample.livestreaming"
        minSdkVersion 25
        targetSdkVersion 28
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        // For RICOH Signaling
        buildConfigField("String", "CLIENT_ID", "\"${client_id}\"")
        buildConfigField("String", "CLIENT_SECRET", "\"${client_secret}\"")
        buildConfigField("String", "ROOM_ID", "\"${room_id}\"")
        // For Sora Signalin
        buildConfigField("String", "SIGNALING_ENDPOINT", "\"${signaling_endpoint}\"")
        buildConfigField("String", "CHANNEL_ID", "\"${channel_id}\"")
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories {
    maven { url 'https://github.com/ricohapi/theta-plugin-library/raw/master/repository' }
}

dependencies {
    implementation 'com.squareup.okhttp3:okhttp:3.12.1'
    compileOnly 'javax.json:javax.json-api:1.0'   // v1.1 or higher does not work on Android
    implementation 'org.glassfish:javax.json:1.0' // v1.1 or higher does not work on Android

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.1.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.1.1"

    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.theta360:pluginlibrary:2.0.0'

    // Sora Android SDK
    if (findProject(':sora-android-sdk') != null) {
        // module is included
        api project(':sora-android-sdk')
    } else {
        // external dependency
        api("com.github.shiguredo:sora-android-sdk:develop-SNAPSHOT") {
            transitive = true
        }
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.jvmTarget = '1.8'
}

